//apply plugin: 'checkstyle'
//apply plugin: 'pmd'
//apply plugin: 'findbugs'
//
//
////findbugs {
////    ignoreFailures = true
////
////    effort = "max"
////    // This selects what level of bugs to report: low means low priority issues will be reported
////    // (in addition to medium+high), which corresponds to warning about everything.
////    reportLevel = "medium"
////
////    excludeFilter = new File("${project.rootDir}/quality/findbugs/findbugs-exclude.xml")
////}
////
////task findbugs(type: FindBugs, dependsOn: "assemble", group: 'verification') {
////    classes = files("$projectDir.absolutePath/build/intermediates/classes")
////
////    source = fileTree('src/main/java')
////    classpath = files()
////
////    // Only one report format is supported. Html is easier to read, so let's use that
////    // (xml is the one that's enabled by default).
////    reports {
////        xml.enabled = false
////        html.enabled = true
////    }
////}
//
//pmd {
//    toolVersion = '5.5.2'
//    ignoreFailures = true
//    ruleSetFiles = files("${project.rootDir}/quality/pmd/pmd-rules.xml")
//    ruleSets = []
//}
//
//task pmd(type: Pmd, group: 'verification') {
//    source 'src'
//    include '**/*.java'
//    exclude('**/gen/**',
//            '**/debug/**',
//            '**/androidTest/**',
//            '**/test**/**')
//
//    reports {
//        xml.enabled = false
//        html.enabled = true
////        html {
////            destination "$projectDir.absolutePath/build/reports/pmd/pmd.html"
////        }
//    }
//}
//
//task checkstyle(type: Checkstyle) {
//    configFile file("${project.rootDir}/quality/checkstyle/checkstyle.xml")
//    source 'src'
//    include '**/*.java'
//    exclude '**/gen/**'
//    exclude '**/R.java'
//    exclude '**/BuildConfig.java'
//
//    reports {
//        xml.enabled = false
//        html.enabled = true
//    }
//
//    classpath = files()
//}
//
//afterEvaluate {
//    project.tasks.getByName("check").dependsOn 'findbugs', 'pmd', 'checkstyle'
//}